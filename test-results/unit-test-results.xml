<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="29" failures="0" errors="0" time="9.33">
  <testsuite name="Monsters Service Extended" errors="0" failures="0" skipped="0" timestamp="2025-05-15T02:42:00" time="1.128" tests="3">
    <testcase classname="Monsters Service Extended should get the winner of the battle of monsters" name="Monsters Service Extended should get the winner of the battle of monsters" time="0.019">
    </testcase>
    <testcase classname="Monsters Service Extended should handle errors when the battle API call fails" name="Monsters Service Extended should handle errors when the battle API call fails" time="0.009">
    </testcase>
    <testcase classname="Monsters Service Extended should handle null computer monster" name="Monsters Service Extended should handle null computer monster" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Monsters Reducer" errors="0" failures="0" skipped="0" timestamp="2025-05-15T02:42:00" time="1.302" tests="5">
    <testcase classname="Monsters Reducer should return the initial state" name="Monsters Reducer should return the initial state" time="0.014">
    </testcase>
    <testcase classname="Monsters Reducer should not change the monsters list on action pending" name="Monsters Reducer should not change the monsters list on action pending" time="0.002">
    </testcase>
    <testcase classname="Monsters Reducer should not change the monsters list on action rejected" name="Monsters Reducer should not change the monsters list on action rejected" time="0.001">
    </testcase>
    <testcase classname="Monsters Reducer should change the monsters list on action fulfilled" name="Monsters Reducer should change the monsters list on action fulfilled" time="0.001">
    </testcase>
    <testcase classname="Monsters Reducer should add the selected monster to the state" name="Monsters Reducer should add the selected monster to the state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="monstersReducerExtended" errors="0" failures="0" skipped="0" timestamp="2025-05-15T02:42:01" time="0.414" tests="7">
    <testcase classname="monstersReducerExtended should handle initial state" name="monstersReducerExtended should handle initial state" time="0.005">
    </testcase>
    <testcase classname="monstersReducerExtended should handle setRandomMonster action" name="monstersReducerExtended should handle setRandomMonster action" time="0.001">
    </testcase>
    <testcase classname="monstersReducerExtended should handle setSelectedMonster action" name="monstersReducerExtended should handle setSelectedMonster action" time="0.002">
    </testcase>
    <testcase classname="monstersReducerExtended should handle setWinner action" name="monstersReducerExtended should handle setWinner action" time="0.001">
    </testcase>
    <testcase classname="monstersReducerExtended should handle fetchBattleWins.pending action" name="monstersReducerExtended should handle fetchBattleWins.pending action" time="0.001">
    </testcase>
    <testcase classname="monstersReducerExtended should handle fetchBattleWins.fulfilled action" name="monstersReducerExtended should handle fetchBattleWins.fulfilled action" time="0.001">
    </testcase>
    <testcase classname="monstersReducerExtended should handle fetchBattleWins.rejected action" name="monstersReducerExtended should handle fetchBattleWins.rejected action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Monsters Service" errors="0" failures="0" skipped="0" timestamp="2025-05-15T02:42:01" time="0.31" tests="2">
    <testcase classname="Monsters Service should return the monsters list empty" name="Monsters Service should return the monsters list empty" time="0.006">
    </testcase>
    <testcase classname="Monsters Service should return the monsters list with data" name="Monsters Service should return the monsters list with data" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="WinnerDisplay" errors="0" failures="0" skipped="0" timestamp="2025-05-15T02:42:00" time="5.503" tests="1">
    <testcase classname="WinnerDisplay renders the default text when no winner text is provided" name="WinnerDisplay renders the default text when no winner text is provided" time="0.137">
    </testcase>
  </testsuite>
  <testsuite name="MonsterBattleCard" errors="0" failures="0" skipped="0" timestamp="2025-05-15T02:42:00" time="5.629" tests="2">
    <testcase classname="MonsterBattleCard renders an empty card when no monster is provided" name="MonsterBattleCard renders an empty card when no monster is provided" time="0.141">
    </testcase>
    <testcase classname="MonsterBattleCard renders the card with title when a monster is provided" name="MonsterBattleCard renders the card with title when a monster is provided" time="0.046">
    </testcase>
  </testsuite>
  <testsuite name="MonsterBattleCardExtended" errors="0" failures="0" skipped="0" timestamp="2025-05-15T02:42:00" time="5.542" tests="3">
    <testcase classname="MonsterBattleCardExtended renders the monster card correctly with a monster" name="MonsterBattleCardExtended renders the monster card correctly with a monster" time="0.137">
    </testcase>
    <testcase classname="MonsterBattleCardExtended renders an empty card when no monster is provided" name="MonsterBattleCardExtended renders an empty card when no monster is provided" time="0.009">
    </testcase>
    <testcase classname="MonsterBattleCardExtended handles null monster value correctly" name="MonsterBattleCardExtended handles null monster value correctly" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="MonstersList" errors="0" failures="0" skipped="0" timestamp="2025-05-15T02:42:00" time="5.926" tests="3">
    <testcase classname="MonstersList should render the monsters list" name="MonstersList should render the monsters list" time="0.136">
    </testcase>
    <testcase classname="MonstersList should render the no monsters available message" name="MonstersList should render the no monsters available message" time="0.009">
    </testcase>
    <testcase classname="MonstersList should click on the first monster card" name="MonstersList should click on the first monster card" time="0.084">
    </testcase>
  </testsuite>
  <testsuite name="BattleOfMonsters" errors="0" failures="0" skipped="0" timestamp="2025-05-15T02:42:00" time="6.114" tests="3">
    <testcase classname="BattleOfMonsters should render the page container" name="BattleOfMonsters should render the page container" time="0.149">
    </testcase>
    <testcase classname="BattleOfMonsters should enable the start battle button on choose a monster" name="BattleOfMonsters should enable the start battle button on choose a monster" time="0.096">
    </testcase>
    <testcase classname="BattleOfMonsters should start fight after click on button" name="BattleOfMonsters should start fight after click on button" time="0.067">
    </testcase>
  </testsuite>
</testsuites>